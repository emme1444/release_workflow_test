# Create Release encompasses both building for release and releasing.
name: Callable Create Release

on:
  workflow_call:

jobs:
  check-release:
    name: Check if Release
    # TODO: This could run on Linux maybe?
    runs-on: macos-11
    outputs:
      # See semantic-release action (/.github/actions/semantic-release).
      should-release: ${{ steps.run-semantic-release.outputs.should-release }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: run-semantic-release
        # TODO: change this path!
        uses: ./.github/actions/run-semantic-release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pre-build: true
  build:
    name: Build Release for ${{ matrix.name }}
    needs:
      - check-release
    if: needs.check-release.outputs.should-release == 'true'
    strategy:
      fail-fast: false
      matrix:
        includes:
          - name: Android
            target: android
            # TODO: This might need a different command since release build
            build_target: appbundle
          - name: iOS
            target: ios
            # TODO: This might need a different command since release build
            build_target: ios
    steps:
      - run: echo Building for release.
      # 1. if 'android' setup java
      # 2. setup flutter
      # 3. setup node
      # 4. setup semantic-release (deps)
      # 5. run semantic-release with pre-build special config file and pipe to script to check if there was a version created
      #    If semantic-release here didn't create a release I think the script would exit 1
      #    If semantic-release here didn't create a release somehow subsequent steps should be skipped
      # 6. run flutter build
      # 7. publish artifact
  release:
    name: Release
    needs:
      - build
    runs-on: macos-11
    steps:
      - run: echo Releasing
